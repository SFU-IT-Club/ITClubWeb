<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ITClubWeb}}</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'primary-red': '#E63946',
                        'dark-red': '#C1121F',
                        'light-red': '#FF686B',
                        'rich-black': '#0A0908',
                        'off-white': '#F8F9FA'
                    },
                    fontFamily: {
                        'sans': ['Inter', 'sans-serif'],
                    }
                }
            }
        }
    </script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');

        .hero-pattern {
            background-color: #0A0908;
            background-image: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23E63946' fill-opacity='0.1'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
        }
    </style>
</head>

<body class="hero-pattern text-off-white flex justify-center p-4 relative overflow-y-auto">
    <form id="design_form" class="shadow-xl bg-white text-black p-8 rounded-lg w-96 border-2 border-black my-10">
        <div class="text-center mb-6">
            <h2 class="text-3xl font-bold text-black mb-2">Create Design Post</h2>
            <div class="h-1 w-20 bg-red-600 mx-auto"></div>
        </div>

        <div class="mb-5">
            <label for="figma-link" class="block mb-2 text-sm font-medium text-gray-900">Figma Link</label>
            <input type="url" id="figma-link" placeholder="https://www.figma.com/"
                class="bg-white border-2 border-black text-black text-sm rounded-lg focus:ring-red-500 focus:border-red-500 block w-full p-2.5">
        </div>

        <div class="flex items-center gap-2 mb-2">
            <label class="block text-sm font-medium text-gray-900">Contributors</label>
        </div>

        <div id="contributors_container" class="text-gray-500 italic text-sm mb-5">
            Contributors will appear here when added
        </div>

        <div class="mb-5 flex items-center gap-2">
            <input type="text" id="contributor-input"
                class="bg-white border-2 border-black text-black text-sm rounded-lg focus:ring-red-500 focus:border-red-500 block w-full p-2.5">
            <button type="button" id="plus_button" class="p-2 rounded-full hover:bg-gray-200 transition">
                <svg class="w-6 h-6 text-black" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="25" height="25"
                    fill="none" viewBox="0 0 24 24">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M12 7.757v8.486M7.757 12h8.486M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
                </svg>
            </button>
        </div>

        <button type="button"
            class="w-full bg-black text-white font-bold py-2 px-4 rounded-lg hover:bg-red-600 transition">
            Submit
        </button>
    </form>

    <script>
        const plus_button = document.getElementById("plus_button");
        const contributor_input = document.getElementById("contributor-input");
        const contributors_container = document.getElementById("contributors_container");

        let contributors = [];

        plus_button.addEventListener("click", () => {
            if (contributor_input.value.trim() === '') return;
            contributors.push({ id: new Date().getTime(), name: contributor_input.value });
            print_contributors();
            contributor_input.value = '';
        });

        function contributor_card(contributor) {
            return `
                <div class="bg-gray-200 rounded-full mb-2 py-2 px-4 flex items-center justify-between w-full">
                    <span class="text-gray-800 font-medium">${contributor.name}</span>
                    <svg onclick="handle_remove_click(${contributor.id})" 
                        class="cursor-pointer w-6 h-6 text-black-500 hover:text-black-600 transition"
                        aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor"
                        viewBox="0 0 24 24">
                        <path fill-rule="evenodd" 
                            d="M5 8a4 4 0 1 1 8 0 4 4 0 0 1-8 0Zm-2 9a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v1a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-1Zm13-6a1 1 0 1 0 0 2h4a1 1 0 1 0 0-2h-4Z" 
                            clip-rule="evenodd"/>
                    </svg>
                </div>
            `;
        }

        function print_contributors() {
            contributors_container.innerHTML = contributors.map(item => contributor_card(item)).join('');
        }

        function handle_remove_click(id) {
            remove_contributor(id);
            print_contributors();
        }

        function remove_contributor(id) {
            contributors = contributors.filter(item => item.id !== id);
        }

        const submitButton = document.querySelector("button[type='button']");

        submitButton.addEventListener("click", async () => {
            const figmaLink = document.getElementById("figma-link").value.trim();

            if (!figmaLink || contributors.length === 0) {
                alert("Please fill in Figma link and at least one contributor.");
                return;
            }

            const payload = {
                user_id: 60, 
                figma_link: figmaLink,
                contributors: contributors.map(c => c.name)
            };

            try {
                const response = await fetch("/api/design-Posts/store", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(payload)
                });

                const data = await response.json();
                if (response.ok) {
                    alert("Design post created successfully!");
                    console.log(data);
                    window.location.reload();
                } else {
                    alert("Error: " + data.message);
                }

            } catch (error) {
                console.error("Error submitting design post:", error);
                alert("Something went wrong.");
            }
        });
    </script>
</body>
</html>